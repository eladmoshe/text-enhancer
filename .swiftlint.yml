# SwiftLint Configuration for TextEnhancer
# See https://github.com/realm/SwiftLint for documentation

# Directories to include/exclude
included:
  - Sources/
  - Tests/

excluded:
  - .build/
  - Package.resolved
  - .git/
  - .github/

# File types to lint
file_types:
  - .swift

# Disabled rules
disabled_rules:
  - trailing_whitespace # Let SwiftFormat handle this
  - vertical_whitespace # Let SwiftFormat handle this

# Opt-in rules (not enabled by default)
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# Rule configurations
line_length:
  warning: 120
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

function_body_length:
  warning: 60
  error: 100

function_parameter_count:
  warning: 6
  error: 8

type_body_length:
  warning: 300
  error: 400

file_length:
  warning: 500
  error: 1200
  ignore_comment_only_lines: true

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 3
    error: 6
  statement_level:
    warning: 5
    error: 10

identifier_name:
  min_length:
    warning: 1
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - url
    - key
    - api
    - app
    - ui
    - os

type_name:
  min_length:
    warning: 3
    error: 1
  max_length:
    warning: 40
    error: 50

# Custom rules
custom_rules:
  # Prevent usage of print() in production code (except in specific cases)
  no_print:
    name: "No print statements"
    regex: '(?<!//\s*)print\('
    match_kinds:
      - identifier
    message: "Use proper logging instead of print()"
    severity: warning
    
  # Prevent force unwrapping in non-test code
  no_force_unwrapping_in_sources:
    name: "No force unwrapping in Sources"
    regex: '\!\s*(?:\n|$|[^=])'
    match_kinds:
      - identifier
    included: 
      - "Sources/.*\\.swift"
    message: "Avoid force unwrapping in production code"
    severity: warning

  # Encourage use of guard statements for early returns
  prefer_guard:
    name: "Prefer guard statements"
    regex: 'if\s+.*\{\s*return'
    message: "Consider using guard statement for early returns"
    severity: warning

# Reporter types
reporter: "github-actions-logging"

# Severity levels
warning_threshold: 10
error_threshold: 50 